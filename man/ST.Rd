% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sfi.R
\name{ST}
\alias{ST}
\alias{ST_GeometryCollection}
\alias{ST_LineString}
\alias{ST_MultiLineString}
\alias{ST_MultiPoint}
\alias{ST_MultiPolygon}
\alias{ST_Point}
\alias{ST_Polygon}
\title{Create a point simple feature from a numeric vector}
\usage{
ST_Point(x, third = "Z", ...)

ST_MultiPoint(x, third = "Z", ...)

ST_LineString(x, third = "Z", ...)

ST_Polygon(x, third = "Z", ...)

ST_MultiLineString(x, third = "Z", ...)

ST_MultiPolygon(x, third = "Z", ...)

ST_GeometryCollection(x, third = "Z", ...)
}
\arguments{
\item{x}{numeric vector of length 2, 3 or 4}

\item{third}{character, indicating what a 3-dimensional point refers to ("Z" or "M")}

\item{...}{ignored}
}
\description{
Create a point simple feature from a numeric vector
}
\examples{
(p1 = ST_Point(c(1,2)))
class(p1)
bbox(p1)
(p2 = ST_Point(c(1,2,3)))
class(p2)
(p3 = ST_Point(c(1,2,3), "M"))
pts = matrix(1:10, , 2)
(mp1 = ST_MultiPoint(pts))
pts = matrix(1:15, , 3)
(mp2 = ST_MultiPoint(pts))
(mp3 = ST_MultiPoint(pts, "M"))
pts = matrix(1:20, , 4)
(mp4 = ST_MultiPoint(pts))
pts = matrix(1:10, , 2)
(ls1 = ST_LineString(pts))
pts = matrix(1:15, , 3)
(ls2 = ST_LineString(pts))
(ls3 = ST_LineString(pts, "M"))
pts = matrix(1:20, , 4)
(ls4 = ST_LineString(pts))
outer = matrix(c(0,0,10,0,10,10,0,10,0,0),ncol=2, byrow=TRUE)
hole1 = matrix(c(1,1,1,2,2,2,2,1,1,1),ncol=2, byrow=TRUE)
hole2 = matrix(c(5,5,5,6,6,6,6,5,5,5),ncol=2, byrow=TRUE)
pts = list(outer, hole1, hole2)
(ml1 = ST_MultiLineString(pts))
pts3 = lapply(pts, function(x) cbind(x, 0))
(ml2 = ST_MultiLineString(pts3))
(ml3 = ST_MultiLineString(pts3, "M"))
pts4 = lapply(pts3, function(x) cbind(x, 0))
(ml4 = ST_MultiLineString(pts4))
outer = matrix(c(0,0,10,0,10,10,0,10,0,0),ncol=2, byrow=TRUE)
hole1 = matrix(c(1,1,1,2,2,2,2,1,1,1),ncol=2, byrow=TRUE)
hole2 = matrix(c(5,5,5,6,6,6,6,5,5,5),ncol=2, byrow=TRUE)
pts = list(outer, hole1, hole2)
(pl1 = ST_Polygon(pts))
pts3 = lapply(pts, function(x) cbind(x, 0))
(pl2 = ST_Polygon(pts3))
(pl3 = ST_Polygon(pts3, "M"))
pts4 = lapply(pts3, function(x) cbind(x, 0))
(pl4 = ST_Polygon(pts4))
pol1 = list(outer, hole1, hole2)
pol2 = list(outer + 12, hole1 + 12)
pol3 = list(outer + 24)
mp = list(pol1,pol2,pol3)
(mp1 = ST_MultiPolygon(mp))
pts3 = lapply(mp, function(x) lapply(x, function(y) cbind(y, 0)))
(mp2 = ST_MultiPolygon(pts3))
(mp3 = ST_MultiPolygon(pts3, "M"))
pts4 = lapply(mp2, function(x) lapply(x, function(y) cbind(y, 0)))
(mp4 = ST_MultiPolygon(pts4))
(gc = ST_GeometryCollection(list(p1, ls1, pl1, mp1)))
(gc3 = ST_GeometryCollection(list(mp3, pl1)))
}

